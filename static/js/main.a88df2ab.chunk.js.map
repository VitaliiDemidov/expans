{"version":3,"sources":["List.jsx","redux/actions.jsx","App.js","redux/index.js","redux/reducers.jsx","index.js"],"names":["mapDispatchToProps","removeExpanse","payload","type","connect","state","data","expanse","length","className","removeItem","e","id","currentTarget","map","item","index","date","number","name","currency","key","onClick","addExpanse","sortExpanses","amount","useSelector","rates","total","dispatch","useDispatch","useState","setDate","setNumber","setName","setCurrency","onDisabled","sum","reduce","acc","EUR","onChange","target","value","placeholder","disabled","a","fetch","response","json","toFixed","initialState","rootReducer","combineReducers","action","filter","PLN","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAiCMA,EAAqB,CACzBC,cCxB2B,SAACC,GAAD,MAAc,CACzCC,KAT4B,iBAU5BD,aD+BaE,eANS,SAACC,GACvB,MAAO,CACLC,KAAMD,EAAME,WAIwBP,EAAzBI,EAtCF,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,KAAML,EAAoB,EAApBA,cACpB,IAAKK,EAAKE,OACR,OAAO,uBAAGC,UAAU,eAAb,qBAET,IAAMC,EAAa,SAACC,GAClB,IAAMC,EAAKD,EAAEE,cAAcD,GAC3BX,EAAcW,IAGhB,OACE,wBAAIH,UAAU,aACXH,EAAKQ,KAAI,SAACC,EAAMC,GAAW,IAClBC,EAAiCF,EAAjCE,KAAMC,EAA2BH,EAA3BG,OAAQC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAC5B,OACE,wBAAIX,UAAU,OAAOY,IAAKL,GACxB,gCAASC,GACT,gCAASC,GACT,gCAASE,GACT,gCAASD,GACT,4BAAQP,GAAII,EAAOM,QAASZ,GAA5B,kBE0DNV,EAAqB,CACzBuB,WD9EwB,SAACrB,GAAD,MAAc,CACtCC,KANyB,cAOzBD,YC6EAsB,aDrE0B,SAACtB,GAAD,MAAc,CACxCC,KAf0B,eAgB1BD,aCsEaE,cAAQ,KAAMJ,EAAdI,EAjFH,SAAC,GAAkC,IAAhCmB,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACnBC,EAASC,aAAY,SAACrB,GAAD,OAAWA,EAAME,WACtCoB,EAAQD,aAAY,SAACrB,GAAD,OAAWA,EAAMC,KAAKsB,SAC1CC,EAAWC,cAH2B,EAKpBC,mBAAS,GALW,mBAKrCd,EALqC,KAK/Be,EAL+B,OAMhBD,mBAAS,GANO,mBAMrCb,EANqC,KAM7Be,EAN6B,OAOpBF,mBAAS,IAPW,mBAOrCZ,EAPqC,KAO/Be,EAP+B,OAQZH,mBAAS,IARG,mBAQrCX,EARqC,KAQ3Be,EAR2B,KAUtCC,IAAajB,GAAQF,GAAQC,GAAUE,GACvCiB,EAAMZ,EAAOa,QAAO,SAACC,EAAKxB,GAAN,OAAewB,IAAOxB,EAAKG,SAAQ,GACvDsB,EAAMf,EAAOa,QAAO,SAACC,EAAKxB,GAAN,OAAewB,IAAOxB,EAAKG,OAASS,IAAO,GAerE,OACE,oCACE,yBAAKlB,UAAU,aACb,2BACEN,KAAK,OACLsC,SAAU,SAAC9B,GAAD,OAAOqB,EAAQrB,EAAE+B,OAAOC,QAClCA,MAAO1B,IAET,2BACEd,KAAK,SACLsC,SAAU,SAAC9B,GAAD,OAAOsB,EAAUtB,EAAE+B,OAAOC,QACpCA,MAAOzB,IAET,2BACEf,KAAK,OACLsC,SAAU,SAAC9B,GAAD,OAAOwB,EAAYxB,EAAE+B,OAAOC,QACtCA,MAAOvB,EACPwB,YAAY,kBAEd,2BACEzC,KAAK,OACLsC,SAAU,SAAC9B,GAAD,OAAOuB,EAAQvB,EAAE+B,OAAOC,QAClCA,MAAOxB,EACPyB,YAAY,gBAEd,2BACEzC,KAAK,SACL0C,SAAUT,EACVd,QAzCY,WAOlBC,EANa,CACXN,OACAC,SACAE,WACAD,SAGFa,EAAQ,IACRG,EAAY,IACZD,EAAQ,IACRD,EAAU,IA+BJU,MAAM,kBAGV,yBAAKlC,UAAU,aACb,4BACEoC,UAAU5B,EACVK,QAAS,kBAAME,EAAaP,KAE3BA,EAAI,4BAAwBA,GAAS,eAExC,4BAAQK,QAAS,kBAAMO,GDpDN3B,ECoDwB,MDnD/C,uCAAO,WAAO2B,GAAP,mBAAAiB,EAAA,sEACkBC,MAAM,uFAAD,OAC6D7C,IAFpF,cACC8C,EADD,gBAIcA,EAASC,OAJvB,OAICA,EAJD,OAKCtB,EAAQsB,EAAKtB,MACnBE,EAAS,CACP1B,KAzBe,QA0BfD,QAASyB,IARN,2CAAP,wDADsB,IAACzB,ICoDjB,aACA,8BACE,wCAAiB,IAChByB,EAAK,UAAMa,EAAIU,QAAQ,GAAlB,iBAA+Bb,EAAIa,QAAQ,GAA3C,QAER,kBAAC,EAAD,W,uBC3EFC,EAAe,GCCRC,EAAcC,YAAgB,CACzC9C,QDA4B,WAAmC,IAAlCF,EAAiC,uDAAzB8C,EAAcG,EAAW,uCAC9D,OAAQA,EAAOnD,MACb,IFNuB,cEOrB,MAAM,GAAN,mBAAWE,GAAX,CAAkBiD,EAAOpD,UAC3B,IFPwB,eEQtB,OAAOG,EAAMkD,QAAO,SAAChD,GAAD,OAAaA,EAAQU,OAASqC,EAAOpD,WAC3D,IFR0B,iBESxB,OAAOG,EAAMkD,QAAO,SAAChD,GAAD,OAAaA,IAAYF,EAAMiD,EAAOpD,YAC5D,QACE,OAAOG,ICRXC,KDYyB,WAAmC,IAAlCD,EAAiC,uDAAzB8C,EAAcG,EAAW,uCAC3D,OAAQA,EAAOnD,MACb,IFhBiB,QEiBf,OAAO,2BACFE,GACA,CACDuB,MAAO0B,EAAOpD,QAAQsD,MAG5B,QACE,OAAOnD,M,QEjBPoD,EAAQC,YACZN,EACAO,YACEC,YAAgBC,KAChBC,OAAOC,8BAAgCD,OAAOC,iCAIlDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.a88df2ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeExpanse } from './redux/actions';\r\nimport './App.css';\r\n\r\nconst List = ({ data, removeExpanse }) => {\r\n  if (!data.length) {\r\n    return <p className='list-center'>Add some expanses</p>;\r\n  }\r\n  const removeItem = (e) => {\r\n    const id = e.currentTarget.id;\r\n    removeExpanse(id);\r\n  };\r\n\r\n  return (\r\n    <ul className='container'>\r\n      {data.map((item, index) => {\r\n        const { date, number, name, currency } = item;\r\n        return (\r\n          <li className='item' key={index}>\r\n            <strong>{date}</strong>\r\n            <strong>{number}</strong>\r\n            <strong>{currency}</strong>\r\n            <strong>{name}</strong>\r\n            <button id={index} onClick={removeItem}>\r\n              DELETE\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nconst mapDispatchToProps = {\r\n  removeExpanse,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.expanse,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","export const ADD_EXPANSE = 'ADD_EXPANSE';\r\nexport const SORT_EXPANSE = 'EDIT_EXPANSE';\r\nexport const REMOVE_EXPANSE = 'REMOVE_EXPANSE';\r\nexport const TOTAL = 'TOTAL';\r\n\r\nexport const addExpanse = (payload) => ({\r\n  type: ADD_EXPANSE,\r\n  payload,\r\n});\r\n\r\nexport const removeExpanse = (payload) => ({\r\n  type: REMOVE_EXPANSE,\r\n  payload,\r\n});\r\n\r\nexport const sortExpanses = (payload) => ({\r\n  type: SORT_EXPANSE,\r\n  payload,\r\n});\r\n\r\nexport const setTotal = (payload) => {\r\n  return async (dispatch) => {\r\n    const response = await fetch(\r\n      `http://data.fixer.io/api/latest?access_key=a683de89039615c4e5549e72e783c63f&symbols=${payload}`\r\n    );\r\n    const json = await response.json();\r\n    const rates = json.rates;\r\n    dispatch({\r\n      type: TOTAL,\r\n      payload: rates,\r\n    });\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport List from './List';\r\nimport { addExpanse, setTotal, sortExpanses } from './redux/actions';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\n\r\nconst App = ({ addExpanse, sortExpanses }) => {\r\n  const amount = useSelector((state) => state.expanse);\r\n  const rates = useSelector((state) => state.data.total);\r\n  const dispatch = useDispatch();\r\n\r\n  const [date, setDate] = useState(0);\r\n  const [number, setNumber] = useState(0);\r\n  const [name, setName] = useState('');\r\n  const [currency, setCurrency] = useState('');\r\n\r\n  const onDisabled = name && date && number && currency ? false : true;\r\n  const sum = amount.reduce((acc, item) => acc + +item.number, 0);\r\n  const EUR = amount.reduce((acc, item) => acc + +item.number / rates, 0);\r\n\r\n  const submitValue = () => {\r\n    const list = {\r\n      date,\r\n      number,\r\n      currency,\r\n      name,\r\n    };\r\n    addExpanse(list);\r\n    setDate('');\r\n    setCurrency('');\r\n    setName('');\r\n    setNumber(0);\r\n  };\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        <input\r\n          type='date'\r\n          onChange={(e) => setDate(e.target.value)}\r\n          value={date}\r\n        />\r\n        <input\r\n          type='number'\r\n          onChange={(e) => setNumber(e.target.value)}\r\n          value={number}\r\n        />\r\n        <input\r\n          type='text'\r\n          onChange={(e) => setCurrency(e.target.value)}\r\n          value={currency}\r\n          placeholder='Currency(PLN)'\r\n        />\r\n        <input\r\n          type='text'\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n          placeholder='Add Prodact'\r\n        />\r\n        <input\r\n          type='submit'\r\n          disabled={onDisabled}\r\n          onClick={submitValue}\r\n          value='Add Expanses'\r\n        />\r\n      </div>\r\n      <div className='container'>\r\n        <button\r\n          disabled={date ? false : true}\r\n          onClick={() => sortExpanses(date)}\r\n        >\r\n          {date ? `filter expanses by${date}` : 'select date'}\r\n        </button>\r\n        <button onClick={() => dispatch(setTotal('PLN'))}>TOTAL EUR</button>\r\n        <span>\r\n          <i>total sum</i>{' '}\r\n          {rates ? `${EUR.toFixed(2)}EUR` : `${sum.toFixed(2)}PLN`}\r\n        </span>\r\n        <List />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapDispatchToProps = {\r\n  addExpanse,\r\n  sortExpanses,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { ADD_EXPANSE, SORT_EXPANSE, REMOVE_EXPANSE, TOTAL } from './actions';\r\n\r\nconst initialState = [];\r\n\r\nexport const expanseReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_EXPANSE:\r\n      return [...state, action.payload];\r\n    case SORT_EXPANSE:\r\n      return state.filter((expanse) => expanse.date === action.payload);\r\n    case REMOVE_EXPANSE:\r\n      return state.filter((expanse) => expanse !== state[action.payload]);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOTAL:\r\n      return {\r\n        ...state,\r\n        ...{\r\n          total: action.payload.PLN,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { expanseReducer, dataReducer } from './index';\r\n\r\nexport const rootReducer = combineReducers({\r\n  expanse: expanseReducer,\r\n  data: dataReducer,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { rootReducer } from './redux/reducers';\r\nimport { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}